name: Build and Deploy Spring Boot Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build with Gradle
        run: ./gradlew build -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=512m"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: spring-boot-app
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: spring-boot-app
          path: build/libs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          # Build the Docker image locally
          docker build -t spring-boot-app:${GITHUB_SHA::8} .

      - name: Deploy with Docker
        run: |
          echo "Deploying Docker container on the host machine..."
          
          # Stop any previously running container with the same name
          docker stop spring-boot-app || true
          docker rm spring-boot-app || true
          
          # Run the new container
          docker run -d \
            --name spring-boot-app \
            -p 8080:8080 \
            --restart unless-stopped \
            spring-boot-app:${GITHUB_SHA::8}
          
          echo "Deployment complete and done"